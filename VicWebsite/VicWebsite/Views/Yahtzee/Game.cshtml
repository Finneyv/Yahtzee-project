@model VicWebsite.Models.YahtzeeGameModel

@{
    ViewBag.Title = "Game";
    SelectList catagories = ViewBag.Catagories;
}

<h2>Yahtzee Game</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Your Yahtzee Game</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Catagory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Catagory, catagories, "-- Select Scoring Catagory --", new { htmlAttributes = new { id = "Catagory", @class = "form-control" } })
                @*@Html.DisplayFor(model => model.Yahtzee, "", new { id = "Yahtzee", data_bind = "value: Yahtzee" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row">
            <div class="col-xs-4 col-md-4">
                @Html.EditorFor(model => model.Dice1, new { htmlAttributes = new { id = "Dice1", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Dice1, "", new { @class = "text-danger" })
            </div>
                <div class="col-xs-2 col-md-4">
                    @Html.CheckBoxFor(model => model.Reroll1, new { id = "Reroll1"})
                    @Html.Label("Reroll?")
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row">
            <div class="col-xs-4 col-md-4">
                @Html.EditorFor(model => model.Dice2, new { htmlAttributes = new { id = "Dice2", @class = "form-control", @readonly = "readonly"} })
                @Html.ValidationMessageFor(model => model.Dice2, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-2 col-md-4">
                @Html.CheckBoxFor(model => model.Reroll2, new { id = "Reroll2"})
                @Html.Label("Reroll?")
            </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row">
            <div class="col-xs-4 col-md-4">
                @Html.EditorFor(model => model.Dice3, new { htmlAttributes = new { id = "Dice3", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Dice3, "", new { @class = "text-danger" })
            </div>
                <div class="col-xs-2 col-md-4">
                   @Html.CheckBoxFor(model => model.Reroll3, new { id = "Reroll3" })
                    @Html.Label("Reroll?")
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row">
            <div class="col-xs-4 col-md-4">
                @Html.EditorFor(model => model.Dice4, new { htmlAttributes = new { id = "Dice4", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Dice4, "", new { @class = "text-danger" })
            </div>
                <div class="col-xs-2 col-md-4">
                    @Html.CheckBoxFor(model => model.Reroll4, new { id = "Reroll4" })
                    @Html.Label("Reroll?")
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="row">
            <div class="col-xs-4 col-md-4">
                @Html.EditorFor(model => model.Dice5, new { htmlAttributes = new { id ="Dice5", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Dice5, "", new { @class = "text-danger" })
            </div>
                <div class="col-xs-2 col-md-4">
                    @Html.CheckBoxFor(model => model.Reroll5, new { id = "Reroll5" })
                    @Html.Label("Reroll?")
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { id ="total", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="Roll" type="button" onclick="round();" name="Roll" value="Roll"/>
           </div>
    </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript", language="javascript">
        function roll() {
            return Math.floor(Math.random() * (6))+ 1;
        }

        var enumerate = 0;

        function gameLogic(array, label) {
            debugger;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GameLogic", "Yahtzee")',
                data:{
                    Dices: array,
                    Catagory: label
                },
                success: function (data) {
                    debugger;
                    document.getElementById("total").setAttribute("value", data.value);
                },
            });
        }

        function round() {
            debugger;
            var Catagory = document.getElementById("Catagory").value;
            var reroll1 = document.getElementById("Reroll1").value;
            var reroll2 = document.getElementById("Reroll2").value;
            var reroll3 = document.getElementById("Reroll3").value;
            var reroll4 = document.getElementById("Reroll4").value;
            var reroll5 = document.getElementById("Reroll5").value;
            var Dice1 = document.getElementById("Dice1").value;
            var Dice2 = document.getElementById("Dice2").value;
            var Dice3 = document.getElementById("Dice3").value;
            var Dice4 = document.getElementById("Dice4").value;
            var Dice5 = document.getElementById("Dice5").value;
            if (enumerate == 0) {
                Dice1 = roll();
                Dice2 = roll();
                Dice3 = roll();
                Dice4 = roll();
                Dice5 = roll();
            }
            else if(enumerate < 3) {
                if (reroll1 == true) {
                    Dice1 = Roll();
                }
                if (reroll2 == true) {
                    Dice2 = Roll();
                }
                if (reroll3 == true) {
                    Dice3 = Roll();
                }
                if (reroll4 == true) {
                    Dice4 = Roll();
                }
                if (reroll5 == true) {
                    Dice5 = Roll();
                }
            }
            else {
                alert("Can only reroll 3 times!")
                document.getElementById("Roll").setAttribute("enable", "disable")
            }
            var dices = [ Dice1, Dice2, Dice3, Dice4, Dice5 ];
            document.getElementById("Dice1").setAttribute("value", Dice1);
            document.getElementById("Dice2").setAttribute("value", Dice2);
            document.getElementById("Dice3").setAttribute("value", Dice3);
            document.getElementById("Dice4").setAttribute("value", Dice4);
            document.getElementById("Dice5").setAttribute("value", Dice5);
            enumerate = enumerate + 1;
            gameLogic(dices, Catagory);
        }
    </script>
}
