@model VicWebsite.Models.YahtzeeGameModel

@{
    ViewBag.Title = "Game";
}

<h2>Yahtzee Game</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Your Yahtzee Game</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Catagory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Catagory, new { htmlAttributes = new { id = "Catagory", @class = "form-control" } })
                @*@Html.DisplayFor(model => model.Yahtzee, "", new { id = "Yahtzee", data_bind = "value: Yahtzee" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dice1, new { htmlAttributes = new { id = "Dice1", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dice1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dice2, new { htmlAttributes = new { id = "Dice2", @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Dice2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dice3, new { htmlAttributes = new { id = "Dice3", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dice3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dice4, new { htmlAttributes = new { id = "Dice4", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dice4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dice5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dice5, new { htmlAttributes = new { id ="Dice5", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dice5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { id ="total", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="Roll" type="button" onclick="round();" name="Roll" value="Roll"/>
           </div>
            <div class="col-md-offset-2 col-md-10">
                <input id="Submit" type="submit" onclick="gameLogic(dices, catagory);" name="Submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript", language="javascript">
        function roll() {
            return Math.floor(Math.random() * (6))+ 1;
        }

        function gameLogic(array, label) {
            debugger;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GameLogic", "Yahtzee")',
                data:{
                    Dices: array,
                    Catagory: label
                },
                success: function (data) {
                    debugger;
                    document.getElementById("total").setAttribute("value", data.value);
                },
            });
        }

        function round() {
            var Catagory = "Is this working?";
            document.getElementById("Catagory").setAttribute("value", Catagory);
            var dices = new Array(roll(), roll(), roll(), roll(), roll());
            document.getElementById("Dice1").setAttribute("value", dices[0]);
            document.getElementById("Dice2").setAttribute("value", dices[1]);
            document.getElementById("Dice3").setAttribute("value", dices[2]);
            document.getElementById("Dice4").setAttribute("value", dices[3]);
            document.getElementById("Dice5").setAttribute("value", dices[4]);
        }

        document.getElementById("Roll").onclick = round;
    </script>
}
